name: Build and publish Python package

on:
  workflow_call:
    inputs:
      targets:
        description: List of build targets for cibuildwheel
        required: false
        default: |
          - linux
          - macos
          - windows
        type: string
      sdist:
        description: Whether to build a source distribution
        required: false
        default: true
        type: boolean
      test_extras:
        description: Any extras_requires modifier that should be used to install the package for testing
        required: false
        default: ''
        type: string
      test_command:
        description: The command to run to test the package (will be run in a temporary directory)
        required: false
        default: ''
        type: string
      libraries:
        description: Packages needed to build the source distribution for testing (installed using apt)
        required: false
        default: ''
        type: string
      upload_to_pypi:
        description: A condition specifying whether to upload to PyPI
        required: false
        default: 'refs/tags/v'
        type: string
      repository_url:
        description: The PyPI repository URL to use
        required: false
        default: ''
        type: string
      submodules:
        description: Whether to checkout submodules
        required: false
        default: true
        type: boolean
    secrets:
      pypi_token:
        required: false

jobs:

  targets:
    name: Load build targets
    if: ${{ inputs.targets != '' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-outputs.outputs.matrix }}
      upload_to_pypi: ${{ steps.set-upload.outputs.upload_to_pypi }}
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install PyYAML click
      - run: echo $LOAD_BUILD_TARGETS_SCRIPT | base64 --decode > load_build_targets.py
        env:
          LOAD_BUILD_TARGETS_SCRIPT: aW1wb3J0IGpzb24KaW1wb3J0IG9zCgppbXBvcnQgY2xpY2sKaW1wb3J0IHlhbWwKCk1BQ0hJTkVfVFlQRSA9IHsKICAgICJsaW51eCI6ICJ1YnVudHUtbGF0ZXN0IiwKICAgICJtYWNvcyI6ICJtYWNvcy1sYXRlc3QiLAogICAgIndpbmRvd3MiOiAid2luZG93cy1sYXRlc3QiLAp9CgpDSUJXX0JVSUxEID0gb3MuZW52aXJvbi5nZXQoIkNJQldfQlVJTEQiLCAiKiIpCkNJQldfQVJDSFMgPSBvcy5lbnZpcm9uLmdldCgiQ0lCV19BUkNIUyIsICJhdXRvIikKCgpAY2xpY2suY29tbWFuZCgpCkBjbGljay5vcHRpb24oIi0tdGFyZ2V0cyIsIGRlZmF1bHQ9IiIpCmRlZiBsb2FkX2J1aWxkX3RhcmdldHModGFyZ2V0cyk6CiAgICAiIiJTY3JpcHQgdG8gbG9hZCBjaWJ1aWxkd2hlZWwgdGFyZ2V0cyBmb3IgR2l0SHViIEFjdGlvbnMgd29ya2Zsb3cuIiIiCiAgICAjIExvYWQgbGlzdCBvZiB0YXJnZXRzCiAgICB0YXJnZXRzID0geWFtbC5sb2FkKHRhcmdldHMsIExvYWRlcj15YW1sLkJhc2VMb2FkZXIpCiAgICBwcmludChqc29uLmR1bXBzKHRhcmdldHMsIGluZGVudD0yKSkKCiAgICAjIENyZWF0ZSBtYXRyaXgKICAgIG1hdHJpeCA9IHsiaW5jbHVkZSI6IFtdfQogICAgZm9yIHRhcmdldCBpbiB0YXJnZXRzOgogICAgICAgIG1hdHJpeFsiaW5jbHVkZSJdLmFwcGVuZChnZXRfbWF0cml4X2l0ZW0odGFyZ2V0KSkKCiAgICAjIE91dHB1dCBtYXRyaXgKICAgIHByaW50KGpzb24uZHVtcHMobWF0cml4LCBpbmRlbnQ9MikpCiAgICBwcmludChmIjo6c2V0LW91dHB1dCBuYW1lPW1hdHJpeDo6e2pzb24uZHVtcHMobWF0cml4KX0iKQoKCmRlZiBnZXRfb3ModGFyZ2V0KToKICAgIGlmICJtYWNvcyIgaW4gdGFyZ2V0OgogICAgICAgIHJldHVybiBNQUNISU5FX1RZUEVbIm1hY29zIl0KICAgIGlmICJ3aW4iIGluIHRhcmdldDoKICAgICAgICByZXR1cm4gTUFDSElORV9UWVBFWyJ3aW5kb3dzIl0KICAgIHJldHVybiBNQUNISU5FX1RZUEVbImxpbnV4Il0KCgpkZWYgZ2V0X2NpYndfYnVpbGQodGFyZ2V0KToKICAgIGlmIHRhcmdldCBpbiB7ImxpbnV4IiwgIm1hY29zIiwgIndpbmRvd3MifToKICAgICAgICByZXR1cm4gQ0lCV19CVUlMRAogICAgcmV0dXJuIHRhcmdldAoKCmRlZiBnZXRfY2lid19hcmNocyh0YXJnZXQpOgogICAgZm9yIGFyY2ggaW4gWyJhYXJjaDY0IiwgImFybTY0IiwgInVuaXZlcnNhbDIiXToKICAgICAgICBpZiB0YXJnZXQuZW5kc3dpdGgoYXJjaCk6CiAgICAgICAgICAgIHJldHVybiBhcmNoCiAgICByZXR1cm4gQ0lCV19BUkNIUwoKCmRlZiBnZXRfbWF0cml4X2l0ZW0odGFyZ2V0KToKICAgIHJldHVybiB7CiAgICAgICAgInRhcmdldCI6IHRhcmdldCwKICAgICAgICAib3MiOiBnZXRfb3ModGFyZ2V0KSwKICAgICAgICAiQ0lCV19CVUlMRCI6IGdldF9jaWJ3X2J1aWxkKHRhcmdldCksCiAgICAgICAgIkNJQldfQVJDSFMiOiBnZXRfY2lid19hcmNocyh0YXJnZXQpLAogICAgfQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBsb2FkX2J1aWxkX3RhcmdldHMoKQo=
      - id: set-outputs
        run: python load_build_targets.py --targets "${{ inputs.targets }}"
        shell: sh
      - id: set-upload
        run: |
          if [ $UPLOAD_TO_PYPI == "true" ] || [ $UPLOAD_TAG == "true" ];
          then
            echo "::set-output name=upload_to_pypi::true"
          else
            echo "::set-output name=upload_to_pypi::false"
          fi
        env:
          UPLOAD_TO_PYPI: ${{ inputs.upload_to_pypi }}
          UPLOAD_TAG: ${{ startsWith(inputs.upload_to_pypi, 'refs/tags/') && github.event_name == 'push' && startsWith(github.event.ref, inputs.upload_to_pypi) }}

  build_wheels:
    name: Build ${{ matrix.target }} wheels
    needs: [targets]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.targets.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
          submodules: ${{ inputs.submodules }}
      - name: Set up QEMU
        if: ${{ matrix.CIBW_ARCHS == 'aarch64' }}
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Run cibuildwheel
        uses: pypa/cibuildwheel@v2.3.1
        with:
          output-dir: dist
        env:
          CIBW_BUILD: ${{ matrix.CIBW_BUILD }}
          CIBW_ARCHS: ${{ matrix.CIBW_ARCHS }}
          CIBW_TEST_EXTRAS: ${{ inputs.test_extras }}
          CIBW_TEST_COMMAND: ${{ inputs.test_command }}
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*

  build_sdist:
    name: Build source distribution
    if: ${{ inputs.sdist }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
          submodules: ${{ inputs.submodules }}
      - name: Install dependencies
        if: ${{ inputs.libraries != '' }}
        uses: ConorMacBride/install-package@main
        with:
          apt: ${{ inputs.libraries }}
      - id: build
        uses: OpenAstronomy/build-python-dist@main
        with:
          test_extras: ${{ inputs.test_extras }}
          test_command: ${{ inputs.test_command }}
          pure_python_wheel: false
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*

  upload_pypi:
    name: Upload to PyPI
    needs: [targets, build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: |
      always() &&
      needs.targets.result == 'success' &&
      needs.targets.outputs.upload_to_pypi == 'true' &&
      needs.build_wheels.result != 'failure' &&
      needs.build_sdist.result != 'failure'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
          repository_url: ${{ inputs.repository_url }}
