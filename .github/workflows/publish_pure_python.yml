name: Build and publish pure Python package

on:
  workflow_call:
    inputs:
      test_groups:
        description: PEP 735 dependency groups that should be installed for testing
        required: false
        default: ''
        type: string
      test_extras:
        description: Any extras_requires modifier that should be used to install the package for testing
        required: false
        default: ''
        type: string
      test_command:
        description: The command to run to test the package (will be run in a temporary directory)
        required: false
        default: ''
        type: string
      env:
        description: A map of environment variables to be available when building and testing
        required: false
        default: ''
        type: string
      libraries:
        description: Packages needed to build the source distribution for testing (installed using apt)
        required: false
        default: ''
        type: string
      runs-on:
        description: Which runner image to use to build and test the sdist and wheel
        required: false
        default: 'ubuntu-latest'
        type: string
      upload_to_pypi:
        description: A condition specifying whether to upload to PyPI
        required: false
        default: 'refs/tags/v'
        type: string
      repository_url:
        description: The PyPI repository URL to use
        required: false
        default: ''
        type: string
      upload_to_anaconda:
        description: A condition specifying whether to upload to Anaconda.org
        required: false
        default: false
        type: boolean
      anaconda_user:
        description: Anaconda.org user or organisation
        required: false
        default: ''
        type: string
      anaconda_package:
        description: Anaconda.org package name
        required: false
        default: ''
        type: string
      anaconda_keep_n_latest:
        description: If specified, only this number of the most recent versions are kept
        required: false
        default: -1
        type: number
      timeout-minutes:
        description: The maximum number of minutes to let the workflow run before GitHub automatically cancels it
        required: false
        default: 360
        type: number
      submodules:
        description: Whether to checkout submodules
        required: false
        default: true
        type: boolean
      python-version:
        description: The Python version to use for building and testing
        required: false
        default: '3.x'
        type: string
      checkout_ref:
        description: The ref to checkout
        required: false
        default: ''
        type: string
    secrets:
      pypi_token:
        required: false
      anaconda_token:
        required: false

jobs:

  build:
    name: Build source and wheel distribution
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        if: ${{ inputs.env != '' }}
        with:
          python-version: '3.12'
      - id: set-env
        if: ${{ inputs.env != '' }}
        run: |
          echo $SET_ENV_SCRIPT | base64 --decode > set_env.py
          pipx run set_env.py "${{ inputs.env }}"
          rm set_env.py
        shell: sh
        env:
          SET_ENV_SCRIPT: IyAvLy8gc2NyaXB0DQojIHJlcXVpcmVzLXB5dGhvbiA9ICI9PTMuMTIiDQojIGRlcGVuZGVuY2llcyA9IFsNCiMgICAgICJweXlhbWw9PTYuMC4yIiwNCiMgXQ0KIyAvLy8NCmltcG9ydCBqc29uDQppbXBvcnQgb3MNCmltcG9ydCBzeXMNCg0KaW1wb3J0IHlhbWwNCg0KR0lUSFVCX0VOViA9IG9zLmdldGVudigiR0lUSFVCX0VOViIpDQppZiBHSVRIVUJfRU5WIGlzIE5vbmU6DQogICAgcmFpc2UgVmFsdWVFcnJvcigiR0lUSFVCX0VOViBub3Qgc2V0LiBNdXN0IGJlIHJ1biBpbnNpZGUgR2l0SHViIEFjdGlvbnMuIikNCg0KREVMSU1JVEVSID0gIkVPRiINCg0KDQpkZWYgc2V0X2VudihlbnYpOg0KDQogICAgZW52ID0geWFtbC5sb2FkKGVudiwgTG9hZGVyPXlhbWwuQmFzZUxvYWRlcikNCiAgICBwcmludChqc29uLmR1bXBzKGVudiwgaW5kZW50PTIpKQ0KDQogICAgaWYgbm90IGlzaW5zdGFuY2UoZW52LCBkaWN0KToNCiAgICAgICAgdGl0bGUgPSAiYGVudmAgbXVzdCBiZSBtYXBwaW5nIg0KICAgICAgICBtZXNzYWdlID0gZiJgZW52YCBtdXN0IGJlIG1hcHBpbmcgb2YgZW52IHZhcmlhYmxlcyB0byB2YWx1ZXMsIGdvdCB0eXBlIHt0eXBlKGVudil9Ig0KICAgICAgICBwcmludChmIjo6ZXJyb3IgdGl0bGU9e3RpdGxlfTo6e21lc3NhZ2V9IikNCiAgICAgICAgZXhpdCgxKQ0KDQogICAgZm9yIGssIHYgaW4gZW52Lml0ZW1zKCk6DQoNCiAgICAgICAgaWYgbm90IGlzaW5zdGFuY2Uodiwgc3RyKToNCiAgICAgICAgICAgIHRpdGxlID0gImBlbnZgIHZhbHVlcyBtdXN0IGJlIHN0cmluZ3MiDQogICAgICAgICAgICBtZXNzYWdlID0gZiJgZW52YCB2YWx1ZXMgbXVzdCBiZSBzdHJpbmdzLCBidXQgdmFsdWUgb2Yge2t9IGhhcyB0eXBlIHt0eXBlKHYpfSINCiAgICAgICAgICAgIHByaW50KGYiOjplcnJvciB0aXRsZT17dGl0bGV9Ojp7bWVzc2FnZX0iKQ0KICAgICAgICAgICAgZXhpdCgxKQ0KDQogICAgICAgIHYgPSB2LnNwbGl0KCJcbiIpDQoNCiAgICAgICAgd2l0aCBvcGVuKEdJVEhVQl9FTlYsICJhIikgYXMgZjoNCiAgICAgICAgICAgIGlmIGxlbih2KSA9PSAxOg0KICAgICAgICAgICAgICAgIGYud3JpdGUoZiJ7a309e3ZbMF19XG4iKQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBmb3IgbGluZSBpbiB2Og0KICAgICAgICAgICAgICAgICAgICBhc3NlcnQgbGluZS5zdHJpcCgpICE9IERFTElNSVRFUg0KICAgICAgICAgICAgICAgIGYud3JpdGUoZiJ7a308PHtERUxJTUlURVJ9XG4iKQ0KICAgICAgICAgICAgICAgIGZvciBsaW5lIGluIHY6DQogICAgICAgICAgICAgICAgICAgIGYud3JpdGUoZiJ7bGluZX1cbiIpDQogICAgICAgICAgICAgICAgZi53cml0ZShmIntERUxJTUlURVJ9XG4iKQ0KDQogICAgICAgIHByaW50KGYie2t9IHdyaXR0ZW4gdG8gR0lUSFVCX0VOViIpDQoNCg0KaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoNCiAgICBzZXRfZW52KHN5cy5hcmd2WzFdKQ0K
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          lfs: true
          submodules: ${{ inputs.submodules }}
          ref: ${{ inputs.checkout_ref }}
      - name: Install dependencies
        if: ${{ inputs.libraries != '' }}
        uses: ConorMacBride/install-package@3e7ad059e07782ee54fa35f827df52aae0626f30 # v1.1.0
        with:
          apt: ${{ inputs.libraries }}
      - id: build
        uses: OpenAstronomy/build-python-dist@9a4b2bd6bda5c48ef3c12b53504ee2263ed032e3 # v1.1.0
        with:
          test_groups: ${{ inputs.test_groups }}
          test_extras: ${{ inputs.test_extras }}
          test_command: ${{ inputs.test_command }}
          python-version: ${{ inputs.python-version }}
          pure_python_wheel: true
      - id: set-upload
        run: |
          if [ $UPLOAD_TO_PYPI == "true" ] || [ $UPLOAD_TAG == "true" ];
          then
            echo "upload_to_pypi=true" >> $GITHUB_OUTPUT
          else
            echo "upload_to_pypi=false" >> $GITHUB_OUTPUT
          fi
        env:
          UPLOAD_TO_PYPI: ${{ inputs.upload_to_pypi }}
          UPLOAD_TAG: ${{ startsWith(inputs.upload_to_pypi, 'refs/tags/') && (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'release' || github.event_name == 'create') && startsWith(github.ref, inputs.upload_to_pypi) }}
      - uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        name: Upload to PyPI
        if: ${{ steps.set-upload.outputs.upload_to_pypi == 'true' }}
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
          repository-url: ${{ inputs.repository_url }}
      - uses: OpenAstronomy/publish-wheels-anaconda@eae491141709933a7636af70b070e4a92d1a45be # v1.0.1
        if: ${{ inputs.upload_to_anaconda }}
        with:
          anaconda_user: ${{ inputs.anaconda_user }}
          anaconda_package: ${{ inputs.anaconda_package }}
          anaconda_token: ${{ secrets.anaconda_token }}
          keep_n_latest: ${{ inputs.anaconda_keep_n_latest }}
