name: Build and publish pure Python package

on:
  workflow_call:
    inputs:
      test_extras:
        description: Any extras_requires modifier that should be used to install the package for testing
        required: false
        default: ''
        type: string
      test_command:
        description: The command to run to test the package (will be run in a temporary directory)
        required: false
        default: ''
        type: string
      libraries:
        description: Packages needed to build the source distribution for testing (installed using apt)
        required: false
        default: ''
        type: string
      upload_to_pypi:
        description: A condition specifying whether to upload to PyPI
        required: false
        default: 'refs/tags/v'
        type: string
      repository_url:
        description: The PyPI repository URL to use
        required: false
        default: ''
        type: string
      submodules:
        description: Whether to checkout submodules
        required: false
        default: true
        type: boolean
    secrets:
      pypi_token:
        required: false

jobs:

  build:
    name: Build source and wheel distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
          submodules: ${{ inputs.submodules }}
      - name: Install dependencies
        if: ${{ inputs.libraries != '' }}
        uses: ConorMacBride/install-package@main
        with:
          apt: ${{ inputs.libraries }}
      - id: build
        uses: OpenAstronomy/build-python-dist@main
        with:
          test_extras: ${{ inputs.test_extras }}
          test_command: ${{ inputs.test_command }}
          pure_python_wheel: true
      - id: set-upload
        run: |
          if [ $UPLOAD_TO_PYPI == "true" ] || [ $UPLOAD_TAG == "true" ];
          then
            echo "::set-output name=upload_to_pypi::true"
          else
            echo "::set-output name=upload_to_pypi::false"
          fi
        env:
          UPLOAD_TO_PYPI: ${{ inputs.upload_to_pypi }}
          UPLOAD_TAG: ${{ startsWith(inputs.upload_to_pypi, 'refs/tags/') && github.event_name == 'push' && startsWith(github.event.ref, inputs.upload_to_pypi) }}
      - uses: pypa/gh-action-pypi-publish@master
        name: Upload to PyPI
        if: ${{ steps.set-upload.outputs.upload_to_pypi == 'true' }}
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
          repository_url: ${{ inputs.repository_url }}
